@model BlocoNotas.Models.Note
@{
    ViewData["Title"] = "Editar Nota";
}

<div class="container py-5 d-flex justify-content-center">
    <div class="col-md-8">
        <div class="card shadow-sm border-0">
            <div class="card-body">
                <h2 class="card-title text-primary mb-4 text-center">✏️ Editar Nota</h2>

                <div id="alertArea"></div>

                <form id="editNoteForm">
                    <input type="hidden" id="noteId" value="@Model.NoteId" />

                    <div class="mb-3">
                        <label for="title" class="form-label">Título</label>
                        <input type="text" class="form-control" id="title" value="@Model.Title" required />
                    </div>

                    <div class="mb-3">
                        <label for="content" class="form-label">Conteúdo</label>
                        <textarea class="form-control" id="content" rows="6">@Model.Content</textarea>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="/Notes" class="btn btn-outline-secondary">Cancelar</a>
                        <button type="submit" class="btn btn-success">Guardar Alterações</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.getElementById("editNoteForm").addEventListener("submit", async e => {
        e.preventDefault();

        const token = localStorage.getItem("token");
        if (!token) {
            showAlert("danger", "Precisa de estar autenticado.");
            return;
        }

        const noteId = document.getElementById("noteId").value;
        const note = {
            NoteId: noteId,
            Title: document.getElementById("title").value,
            Content: document.getElementById("content").value
        };

        try {
            const response = await fetch(`/api/NotesApi/${noteId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                body: JSON.stringify(note)
            });

            if (response.ok) {
                window.location.href = "/Notes";
            } else {
                const data = await response.json();
                showAlert("danger", data.message || "Erro ao editar nota.");
            }
        } catch (error) {
            showAlert("danger", "Erro ao conectar com o servidor.");
            console.error(error);
        }
    });

    function showAlert(type, message) {
        const alertArea = document.getElementById("alertArea");
        alertArea.innerHTML = `
            <div class="alert alert-${type} alert-dismissible fade show mt-3" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
            </div>
        `;
    }
</script>
}