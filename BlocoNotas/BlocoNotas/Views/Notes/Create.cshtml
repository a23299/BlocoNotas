@model BlocoNotas.Models.Note;

@{
ViewData["Title"] = "Criar Nota";
}

<h2>@ViewData["Title"]</h2>

<form id="noteForm">
    <div class="mb-3">
        <label for="title" class="form-label">Título</label>
        <input type="text" class="form-control" id="title" name="title" required />
    </div>
    <div class="mb-3">
        <label for="content" class="form-label">Conteúdo</label>
        <textarea class="form-control" id="content" name="content" rows="5"></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Criar</button>
</form>

<script>
    document.getElementById("noteForm").addEventListener("submit", async e => {
        e.preventDefault();
    
        const token = localStorage.getItem("token");
        if (!token) {
            alert("Precisa de estar autenticado para criar notas.");
            return;
        }
    
        const note = {
            Title: document.getElementById("title").value,
            Content: document.getElementById("content").value,
            UserFK: "42fbf50a-c250-480f-8e94-c4695ac848d4"
        };
    
        try {
            const response = await fetch("/api/NotesApi", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                body: JSON.stringify(note)
            });
    
            if (response.ok) {
                window.location.href = "/Notes"; // redirecionar após sucesso
            } else {
                const data = await response.json();
                alert(data.message || "Erro ao criar nota.");
            }
        } catch (error) {
            alert("Erro ao conectar com o servidor.");
            console.error(error);
        }
    });
</script>

