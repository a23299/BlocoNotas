@model BlocoNotas.Models.ApplicationUser

@{
    ViewData["Title"] = "Editar Utilizador";
}

<div class="container mt-4">
    <h2>Editar Utilizador</h2>

    <div id="alertArea"></div>

    <form id="editUserForm" class="mt-3">
        <input type="hidden" id="UserId" value="@Model.Id" />

        <div class="form-group">
            <label for="username">Nome</label>
            <input type="text" class="form-control" id="username" required />
        </div>
        
        <br/>

        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" class="form-control" id="email" required />
        </div>
        
        <br/>
        
        <div class="form-group">
            <label for="password">Password</label>
            <div class="input-group">
                <input type="password" class="form-control" id="password" required />
                <button type="button" class="btn btn-outline-secondary" id="togglePassword" title="Mostrar password">
                    üëÅ
                </button>
            </div>
        </div>

        <br/>        
        

        <button type="submit" class="btn btn-success">Guardar Altera√ß√µes</button>
        <a href="/Users/Index" class="btn btn-secondary">Cancelar</a>
    </form>
</div>

<script>
    const passwordInput = document.getElementById("password");
    const togglePasswordBtn = document.getElementById("togglePassword");

    togglePasswordBtn.addEventListener("mousedown", () => {
        passwordInput.type = "text";
    });

    togglePasswordBtn.addEventListener("mouseup", () => {
        passwordInput.type = "password";
    });

    togglePasswordBtn.addEventListener("mouseleave", () => {
        passwordInput.type = "password";
    });


    document.addEventListener("DOMContentLoaded", async () => {
        const userId = document.getElementById("UserId").value;
        const nameInput = document.getElementById("username");
        const emailInput = document.getElementById("email");

        try {
            const response = await fetch(`/api/UsersApi/${userId}`);
            if (!response.ok) throw new Error("Erro ao carregar dados");

            const user = await response.json();
            nameInput.value = user.userName;
            emailInput.value = user.email;
        } catch (err) {
            showAlert("danger", "Erro: " + err.message);
        }

        document.getElementById("editUserForm").addEventListener("submit", async e => {
            e.preventDefault();

            const updatedUser = {
                id: userId,
                userName: nameInput.value,
                email: emailInput.value
            };

            try {
                const res = await fetch(`/api/UsersApi/${userId}`, {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(updatedUser)
                });

                if (res.ok) {
                    showAlert("success", "Utilizador atualizado com sucesso.");
                } else {
                    const errText = await res.text();
                    showAlert("danger", "Erro ao guardar: " + errText);
                }
            } catch (err) {
                showAlert("danger", "Erro: " + err.message);
            }
        });
    });


function showAlert(type, message) {
    const alertArea = document.getElementById("alertArea");
    alertArea.innerHTML = `
        <div class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fechar"></button>
        </div>
    `;
}
</script>
